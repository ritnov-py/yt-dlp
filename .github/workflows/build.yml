name: Build
on: workflow_dispatch

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      version_suffix: ${{ steps.version_suffix.outputs.version_suffix }}
      ytdlp_version: ${{ steps.bump_version.outputs.ytdlp_version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
          python-version: '3.10'

    - name: Set version suffix
      id: version_suffix
      env:
        PUSH_VERSION_COMMIT: ${{ secrets.PUSH_VERSION_COMMIT }}
      if: "env.PUSH_VERSION_COMMIT == ''"
      run: echo ::set-output name=version_suffix::$(date -u +"%H%M%S")
    - name: Bump version
      id: bump_version
      run: |
        python devscripts/update-version.py ${{ steps.version_suffix.outputs.version_suffix }}
        make issuetemplates

    - name: Push to release
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@example.com
        git add -u
        git commit -m "[version] update" -m "Created by: ${{ github.event.sender.login }}" -m ":ci skip all :ci run dl"
        git push origin --force ${{ github.event.ref }}:release
        echo ::set-output name=head_sha::$(git rev-parse HEAD)
    - name: Update master
      env:
        PUSH_VERSION_COMMIT: ${{ secrets.PUSH_VERSION_COMMIT }}
      if: "env.PUSH_VERSION_COMMIT != ''"
      run: git push origin ${{ github.event.ref }}
    - name: Get Changelog
      run: |
        changelog=$(grep -oPz '(?s)(?<=### ${{ steps.bump_version.outputs.ytdlp_version }}\n{2}).+?(?=\n{2,3}###)' Changelog.md) || true
        echo "changelog<<EOF" >> $GITHUB_ENV
        echo "$changelog" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.ytdlp_version }}
        release_name: yt-dlp ${{ steps.bump_version.outputs.ytdlp_version }}
        commitish: ${{ steps.push_release.outputs.head_sha }}
        body: |
          #### [A description of the various files]((https://github.com/yt-dlp/yt-dlp#release-files)) are in the README

          ---

          ### Changelog:
          ${{ env.changelog }}
        draft: false
        prerelease: false


  build_unix:
    needs: create_release
    runs-on: ubuntu-latest
    outputs:
      sha256_bin: ${{ steps.get_sha.outputs.sha256_bin }}
      sha512_bin: ${{ steps.get_sha.outputs.sha512_bin }}
      sha256_tar: ${{ steps.get_sha.outputs.sha256_tar }}
      sha512_tar: ${{ steps.get_sha.outputs.sha512_tar }}
      sha256_unix_zip: ${{ steps.get_sha.outputs.sha256_unix_zip }}
      sha512_unix_zip: ${{ steps.get_sha.outputs.sha512_unix_zip }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
          python-version: '3.10'
    - name: Install Requirements
      run: |
          sudo apt-get -y install zip pandoc man
          python -m pip install --upgrade pip setuptools wheel twine
          python -m pip install Pyinstaller -r requirements.txt

    - name: Prepare
      run: |
          python devscripts/update-version.py ${{ needs.create_release.outputs.version_suffix }}
          python devscripts/make_lazy_extractors.py
    - name: Build UNIX executables
      run: |
          make all tar
    - name: Get SHA2-SUMS
      id: get_sha
      run: |
          echo "::set-output name=sha256_bin::$(sha256sum yt-dlp | awk '{print $1}')"
          echo "::set-output name=sha512_bin::$(sha512sum yt-dlp | awk '{print $1}')"
          echo "::set-output name=sha256_tar::$(sha256sum yt-dlp.tar.gz | awk '{print $1}')"
          echo "::set-output name=sha512_tar::$(sha512sum yt-dlp.tar.gz | awk '{print $1}')"

    - name: Upload zip binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./yt-dlp
        asset_name: yt-dlp
        asset_content_type: application/octet-stream
    - name: Upload Source tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./yt-dlp.tar.gz
        asset_name: yt-dlp.tar.gz
        asset_content_type: application/gzip

    - name: Build and publish on PyPi
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      if: "env.TWINE_PASSWORD != ''"
      run: |
        rm -rf dist/*
        python setup.py sdist bdist_wheel
        twine upload dist/*

    - name: Install SSH private key for Homebrew
      env:
        BREW_TOKEN: ${{ secrets.BREW_TOKEN }}
      if: "env.BREW_TOKEN != ''"
      uses: yt-dlp/ssh-agent@v0.5.3
      with:
          ssh-private-key: ${{ env.BREW_TOKEN }}
    - name: Update Homebrew Formulae
      env:
        BREW_TOKEN: ${{ secrets.BREW_TOKEN }}
      if: "env.BREW_TOKEN != ''"
      run: |
        git clone git@github.com:yt-dlp/homebrew-taps taps/
        python devscripts/update-formulae.py taps/Formula/yt-dlp.rb "${{ steps.bump_version.outputs.ytdlp_version }}"
        git -C taps/ config user.name github-actions
        git -C taps/ config user.email github-actions@example.com
        git -C taps/ commit -am 'yt-dlp: ${{ steps.bump_version.outputs.ytdlp_version }}'
        git -C taps/ push


  build_macos:
    runs-on: macos-11
    needs: create_release
    outputs:
      sha256_macos: ${{ steps.get_sha.outputs.sha256_macos }}
      sha512_macos: ${{ steps.get_sha.outputs.sha512_macos }}
      sha256_macos_zip: ${{ steps.get_sha.outputs.sha256_macos_zip }}
      sha512_macos_zip: ${{ steps.get_sha.outputs.sha512_macos_zip }}

    steps:
    - uses: actions/checkout@v2
    # NB: In order to create a universal2 application, the version of python3 in /usr/bin has to be used
    - name: Install Requirements
      run: |
          brew install coreutils
          /usr/bin/python3 -m pip install -U --user pip Pyinstaller -r requirements.txt

    - name: Prepare
      run: |
          /usr/bin/python3 devscripts/update-version.py ${{ needs.create_release.outputs.version_suffix }}
          /usr/bin/python3 devscripts/make_lazy_extractors.py
    - name: Build
      run: |
          /usr/bin/python3 pyinst.py --target-architecture universal2 --onedir
          (cd ./dist/yt-dlp_macos && zip -r ../yt-dlp_macos.zip .)
          /usr/bin/python3 pyinst.py --target-architecture universal2
    - name: Get SHA2-SUMS
      id: get_sha
      run: |
          echo "::set-output name=sha256_macos::$(sha256sum dist/yt-dlp_macos | awk '{print $1}')"
          echo "::set-output name=sha512_macos::$(sha512sum dist/yt-dlp_macos | awk '{print $1}')"
          echo "::set-output name=sha256_macos_zip::$(sha256sum dist/yt-dlp_macos.zip | awk '{print $1}')"
          echo "::set-output name=sha512_macos_zip::$(sha512sum dist/yt-dlp_macos.zip | awk '{print $1}')"

    - name: Upload standalone binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./dist/yt-dlp_macos
        asset_name: yt-dlp_macos
        asset_content_type: application/octet-stream
    - name: Upload onedir binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./dist/yt-dlp_macos.zip
        asset_name: yt-dlp_macos.zip
        asset_content_type: application/zip


  build_windows:
    runs-on: windows-latest
    needs: create_release
    outputs:
      sha256_win: ${{ steps.get_sha.outputs.sha256_win }}
      sha512_win: ${{ steps.get_sha.outputs.sha512_win }}
      sha256_py2exe: ${{ steps.get_sha.outputs.sha256_py2exe }}
      sha512_py2exe: ${{ steps.get_sha.outputs.sha512_py2exe }}
      sha256_win_zip: ${{ steps.get_sha.outputs.sha256_win_zip }}
      sha512_win_zip: ${{ steps.get_sha.outputs.sha512_win_zip }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:  # 3.8 is used for Win7 support
          python-version: '3.8'
    - name: Install Requirements
      run: |  # Custom pyinstaller built with https://github.com/yt-dlp/pyinstaller-builds
          python -m pip install --upgrade pip setuptools wheel py2exe
          pip install "https://yt-dlp.github.io/Pyinstaller-Builds/x86_64/pyinstaller-4.10-py3-none-any.whl" -r requirements.txt

    - name: Prepare
      run: |
          python devscripts/update-version.py ${{ needs.create_release.outputs.version_suffix }}
          python devscripts/make_lazy_extractors.py
    - name: Build
      run: |
          python setup.py py2exe
          Move-Item ./dist/yt-dlp.exe ./dist/yt-dlp_min.exe
          python pyinst.py
          python pyinst.py --onedir
          Compress-Archive -Path ./dist/yt-dlp/* -DestinationPath ./dist/yt-dlp_win.zip
    - name: Get SHA2-SUMS
      id: get_sha
      run: |
          echo "::set-output name=sha256_py2exe::$((Get-FileHash dist\yt-dlp_min.exe -Algorithm SHA256).Hash.ToLower())"
          echo "::set-output name=sha512_py2exe::$((Get-FileHash dist\yt-dlp_min.exe -Algorithm SHA512).Hash.ToLower())"
          echo "::set-output name=sha256_win::$((Get-FileHash dist\yt-dlp.exe -Algorithm SHA256).Hash.ToLower())"
          echo "::set-output name=sha512_win::$((Get-FileHash dist\yt-dlp.exe -Algorithm SHA512).Hash.ToLower())"
          echo "::set-output name=sha256_win_zip::$((Get-FileHash dist\yt-dlp_win.zip -Algorithm SHA256).Hash.ToLower())"
          echo "::set-output name=sha512_win_zip::$((Get-FileHash dist\yt-dlp_win.zip -Algorithm SHA512).Hash.ToLower())"

    - name: Upload py2exe binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./dist/yt-dlp_min.exe
        asset_name: yt-dlp_min.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    - name: Upload standalone binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./dist/yt-dlp.exe
        asset_name: yt-dlp.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    - name: Upload onedir binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./dist/yt-dlp_win.zip
        asset_name: yt-dlp_win.zip
        asset_content_type: application/zip


  build_windows32:
    runs-on: windows-latest
    needs: create_release
    outputs:
      sha256_win32: ${{ steps.get_sha.outputs.sha256_win32 }}
      sha512_win32: ${{ steps.get_sha.outputs.sha512_win32 }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:  # 3.7 is used for Vista support. See https://github.com/yt-dlp/yt-dlp/issues/390
          python-version: '3.7'
          architecture: 'x86'
    - name: Install Requirements
      run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install "https://yt-dlp.github.io/Pyinstaller-Builds/i686/pyinstaller-4.10-py3-none-any.whl" -r requirements.txt

    - name: Prepare
      run: |
          python devscripts/update-version.py ${{ needs.create_release.outputs.version_suffix }}
          python devscripts/make_lazy_extractors.py
    - name: Build
      run: |
          python pyinst.py
    - name: Get SHA2-SUMS
      id: get_sha
      run: |
          echo "::set-output name=sha256_win32::$((Get-FileHash dist\yt-dlp_x86.exe -Algorithm SHA256).Hash.ToLower())"
          echo "::set-output name=sha512_win32::$((Get-FileHash dist\yt-dlp_x86.exe -Algorithm SHA512).Hash.ToLower())"

    - name: Upload standalone binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./dist/yt-dlp_x86.exe
        asset_name: yt-dlp_x86.exe
        asset_content_type: application/vnd.microsoft.portable-executable


  finish:
    runs-on: ubuntu-latest
    needs: [create_release, build_unix, build_windows, build_windows32, build_macos]

    steps:
    - name: Make SHA2-SUMS files
      run: |
        echo "${{ needs.build_unix.outputs.sha256_bin }}  yt-dlp" >> SHA2-256SUMS
        echo "${{ needs.build_unix.outputs.sha256_tar }}  yt-dlp.tar.gz" >> SHA2-256SUMS
        echo "${{ needs.build_windows.outputs.sha256_win }}  yt-dlp.exe" >> SHA2-256SUMS
        echo "${{ needs.build_windows.outputs.sha256_py2exe }}  yt-dlp_min.exe" >> SHA2-256SUMS
        echo "${{ needs.build_windows32.outputs.sha256_win32 }}  yt-dlp_x86.exe" >> SHA2-256SUMS
        echo "${{ needs.build_windows.outputs.sha256_win_zip }}  yt-dlp_win.zip" >> SHA2-256SUMS
        echo "${{ needs.build_macos.outputs.sha256_macos }}  yt-dlp_macos" >> SHA2-256SUMS
        echo "${{ needs.build_macos.outputs.sha256_macos_zip }}  yt-dlp_macos.zip" >> SHA2-256SUMS
        echo "${{ needs.build_unix.outputs.sha512_bin }}  yt-dlp" >> SHA2-512SUMS
        echo "${{ needs.build_unix.outputs.sha512_tar }}  yt-dlp.tar.gz" >> SHA2-512SUMS
        echo "${{ needs.build_windows.outputs.sha512_win }}  yt-dlp.exe" >> SHA2-512SUMS
        echo "${{ needs.build_windows.outputs.sha512_py2exe }}  yt-dlp_min.exe" >> SHA2-512SUMS
        echo "${{ needs.build_windows32.outputs.sha512_win32 }}  yt-dlp_x86.exe" >> SHA2-512SUMS
        echo "${{ needs.build_windows.outputs.sha512_win_zip }}  yt-dlp_win.zip" >> SHA2-512SUMS
        echo "${{ needs.build_macos.outputs.sha512_macos }}  yt-dlp_macos" >> SHA2-512SUMS
        echo "${{ needs.build_macos.outputs.sha512_macos_zip }}  yt-dlp_macos.zip" >> SHA2-512SUMS

    - name: Upload SHA2-256SUMS file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./SHA2-256SUMS
        asset_name: SHA2-256SUMS
        asset_content_type: text/plain
    - name: Upload SHA2-512SUMS file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./SHA2-512SUMS
        asset_name: SHA2-512SUMS
        asset_content_type: text/plain
